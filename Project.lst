Microsoft (R) Macro Assembler Version 12.00.30501.0	    05/16/16 19:43:01
!Planilha-Vintage(FelipeJoseBento			     Page 1 - 1


				TITLE Planilha-Vintage(FelipeJoseBento)

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				  
 = 00000008			tamTexto = 8

				;Criãção de uma Struct, a célula no caso 
 00000017			Cell STRUCT
 00000000  00				typ BYTE 0h							; Tipo da célula, onde 0->Vazia 1->Inteiro, 2->String, 3->Formula (De padrão - VAZIA)
 00000001  00000000			numInt DWORD 00000000h				; Um inteiro terá um tamanho máximo de (2^32)/2 , sendo positivo ou negativo
 00000005  00000008 [			text BYTE tamTexto DUP(?),0			; Um título em uma célula ou texto, terá no máximo 8 characteres ASCII
	    00
	   ] 00
 005E67AE  00000008 [			formula BYTE tamTexto DUP(?),0		; Uma fórmula terá tamanho máximo de 10 characteres ASCII 
	    00
	   ] 00
				Cell ENDS


 = 00000005			TotalColunas = 5 ; Total de colunas que terá a planilha, sendo (A,B,C,D,E)
 = 0000000B			TotalLinhas= 11	 ; Total de linha que terá a planilha, sendo de 1 até TotalLinhas 

 00000000			.data 
				;Linhas, onde cada elemento é uma Struct(CELL)
 00000000  00000005 [		Linha1  Cell TotalColunas DUP(<>)   
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 00000073  00000005 [		Linha2  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 000000E6  00000005 [		Linha3  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 00000159  00000005 [		Linha4  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 000001CC  00000005 [		Linha5  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 0000023F  00000005 [		Linha6  Cell TotalColunas DUP(<>) 
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 000002B2  00000005 [		Linha7  Cell TotalColunas DUP(<>) 
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 00000325  00000005 [		Linha8  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 00000398  00000005 [		Linha9  Cell TotalColunas DUP(<>)
	    00 00000000
	    00000008 [
	     00
	    ] 00
	    00000008 [
	     00
	    ] 00
	   ]
 0000040B 50 6C 61 6E 69	menu BYTE "PlanilhaVintage - Menu",0
	   6C 68 61 56 69
	   6E 74 61 67 65
	   20 2D 20 4D 65
	   6E 75 00
 00000422 31 20 2D 20 49	menuOp1 BYTE "1 - INSERIR VALOR EM UMA CELULA.",0
	   4E 53 45 52 49
	   52 20 56 41 4C
	   4F 52 20 45 4D
	   20 55 4D 41 20
	   43 45 4C 55 4C
	   41 2E 00
 00000443 32 20 2D 20 44	menuOp2 BYTE "2 - DELETAR VALOR DE UMA UMA CELULA.",0 
	   45 4C 45 54 41
	   52 20 56 41 4C
	   4F 52 20 44 45
	   20 55 4D 41 20
	   55 4D 41 20 43
	   45 4C 55 4C 41
	   2E 00
 00000468 33 20 2D 20 43	menuOp3 BYTE "3 - COPIAR VALOR DE UMA CELULA PARA OUTRA.",0 
	   4F 50 49 41 52
	   20 56 41 4C 4F
	   52 20 44 45 20
	   55 4D 41 20 43
	   45 4C 55 4C 41
	   20 50 41 52 41
	   20 4F 55 54 52
	   41 2E 00
 00000493 34 20 2D 20 52	menuOp4 BYTE "4 - RECORTAR VALOR DE UMA CELULA PARA OUTRA.",0 
	   45 43 4F 52 54
	   41 52 20 56 41
	   4C 4F 52 20 44
	   45 20 55 4D 41
	   20 43 45 4C 55
	   4C 41 20 50 41
	   52 41 20 4F 55
	   54 52 41 2E 00
 000004C0 35 20 2D 20 53	menuOp5 BYTE "5 - SELECIONAR UMA CELULA.", 0
	   45 4C 45 43 49
	   4F 4E 41 52 20
	   55 4D 41 20 43
	   45 4C 55 4C 41
	   2E 00
 000004DB 36 20 2D 20 44	menuOp6 BYTE "6 - DELETAR UMA COLUNA.",0
	   45 4C 45 54 41
	   52 20 55 4D 41
	   20 43 4F 4C 55
	   4E 41 2E 00
 000004F3 37 20 2D 20 44	menuOp7 BYTE "7 - DELETAR UMA LINHA.",0  
	   45 4C 45 54 41
	   52 20 55 4D 41
	   20 4C 49 4E 48
	   41 2E 00
 0000050A 44 69 67 69 74	menuMsg1 BYTE "Digite uma opcao: ",0
	   65 20 75 6D 61
	   20 6F 70 63 61
	   6F 3A 20 00
 0000051D 45 6E 74 72 61	menuMsgErro BYTE "Entrada Invalida, por favor digite novamente: ", 0
	   64 61 20 49 6E
	   76 61 6C 69 64
	   61 2C 20 70 6F
	   72 20 66 61 76
	   6F 72 20 64 69
	   67 69 74 65 20
	   6E 6F 76 61 6D
	   65 6E 74 65 3A
	   20 00
 0000054C 44 69 67 69 74	inserirMsg1 BYTE "Digite a coluna no qual deseja inserir: ", 0
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 6E 6F 20 71
	   75 61 6C 20 64
	   65 73 65 6A 61
	   20 69 6E 73 65
	   72 69 72 3A 20
	   00
 00000575 44 69 67 69 74	inserirMsg2 BYTE "Digite a linha na qual deseja inserir: ", 0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   6E 61 20 71 75
	   61 6C 20 64 65
	   73 65 6A 61 20
	   69 6E 73 65 72
	   69 72 3A 20 00
 0000059D 44 69 67 69 74	inserirMsg3 BYTE "Digite o tipo de entrada: (1)Int, (2)String, (3)Formula: ", 0
	   65 20 6F 20 74
	   69 70 6F 20 64
	   65 20 65 6E 74
	   72 61 64 61 3A
	   20 28 31 29 49
	   6E 74 2C 20 28
	   32 29 53 74 72
	   69 6E 67 2C 20
	   28 33 29 46 6F
	   72 6D 75 6C 61
	   3A 20 00
 000005D7 44 69 67 69 74	inserirMsg5 BYTE "Digite a entrada: ", 0
	   65 20 61 20 65
	   6E 74 72 61 64
	   61 3A 20 00
 000005EA 44 69 67 69 74	inserirMsg6 BYTE "Digite o INTEIRO: ",0
	   65 20 6F 20 49
	   4E 54 45 49 52
	   4F 3A 20 00
 000005FD 44 69 67 69 74	inserirMsg7 BYTE "Digite uma STRING(Maximo 8 digitos): ",0
	   65 20 75 6D 61
	   20 53 54 52 49
	   4E 47 28 4D 61
	   78 69 6D 6F 20
	   38 20 64 69 67
	   69 74 6F 73 29
	   3A 20 00
 00000623 44 69 67 69 74	inserirMsg8 BYTE "Digite uma FORMULA(Ex: =A4*A5): ",0
	   65 20 75 6D 61
	   20 46 4F 52 4D
	   55 4C 41 28 45
	   78 3A 20 3D 41
	   34 2A 41 35 29
	   3A 20 00
 00000644 44 69 67 69 74	excluirMsg1 BYTE "Digite a coluna da celula que deseja excluir: ", 0
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 71 75 65 20
	   64 65 73 65 6A
	   61 20 65 78 63
	   6C 75 69 72 3A
	   20 00
 00000673 44 69 67 69 74	excluirMsg2 BYTE "Digite a linha da celula que deseja excluir: ",0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   71 75 65 20 64
	   65 73 65 6A 61
	   20 65 78 63 6C
	   75 69 72 3A 20
	   00
 000006A1 43 65 6C 75 6C	excluirMsg3 BYTE "Celula excluida com sucesso!", 0  
	   61 20 65 78 63
	   6C 75 69 64 61
	   20 63 6F 6D 20
	   73 75 63 65 73
	   73 6F 21 00
 000006BE 44 69 67 69 74	copiarMsg1	BYTE "Digite a coluna da celula que deseja copiar: ",0 
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 71 75 65 20
	   64 65 73 65 6A
	   61 20 63 6F 70
	   69 61 72 3A 20
	   00
 000006EC 44 69 67 69 74	copiarMsg2	BYTE "Digite a linha da celula que deseja copiar: ", 0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   71 75 65 20 64
	   65 73 65 6A 61
	   20 63 6F 70 69
	   61 72 3A 20 00
 00000719 44 69 67 69 74	copiarMsg3	BYTE "Digite a coluna da celula para onde deseja colar: ",0
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 70 61 72 61
	   20 6F 6E 64 65
	   20 64 65 73 65
	   6A 61 20 63 6F
	   6C 61 72 3A 20
	   00
 0000074C 44 69 67 69 74	copiarMsg4	BYTE "Digite a linha da celula para onde  deseja colar: ", 0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   70 61 72 61 20
	   6F 6E 64 65 20
	   20 64 65 73 65
	   6A 61 20 63 6F
	   6C 61 72 3A 20
	   00
 0000077F 44 69 67 69 74	recortarMsg1 BYTE "Digite a coluna da celula que deseja recortar: ",0  
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 71 75 65 20
	   64 65 73 65 6A
	   61 20 72 65 63
	   6F 72 74 61 72
	   3A 20 00
 000007AF 44 69 67 69 74	recortarMsg2 BYTE "Digite a linha da celula que deseja recortar: ",0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   71 75 65 20 64
	   65 73 65 6A 61
	   20 72 65 63 6F
	   72 74 61 72 3A
	   20 00
 000007DE 44 69 67 69 74	recortarMsg3 BYTE "Digite a coluna da celula onde deseja colar: ",0
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 6F 6E 64 65
	   20 64 65 73 65
	   6A 61 20 63 6F
	   6C 61 72 3A 20
	   00
 0000080C 44 69 67 69 74	recortarMsg4 BYTE "Digite a linha da celula onde  deseja colar: ", 0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   6F 6E 64 65 20
	   20 64 65 73 65
	   6A 61 20 63 6F
	   6C 61 72 3A 20
	   00
 0000083A 44 69 67 69 74	selecionarMsg1 BYTE "Digite a coluna da celula que deseja selecionar: ", 0
	   65 20 61 20 63
	   6F 6C 75 6E 61
	   20 64 61 20 63
	   65 6C 75 6C 61
	   20 71 75 65 20
	   64 65 73 65 6A
	   61 20 73 65 6C
	   65 63 69 6F 6E
	   61 72 3A 20 00
 0000086C 44 69 67 69 74	selecionarMsg2 BYTE "Digite a linha da celula que deseja selecionar: ", 0
	   65 20 61 20 6C
	   69 6E 68 61 20
	   64 61 20 63 65
	   6C 75 6C 61 20
	   71 75 65 20 64
	   65 73 65 6A 61
	   20 73 65 6C 65
	   63 69 6F 6E 61
	   72 3A 20 00
 0000089D 42 61 72 72 61	selecionarMsg3 BYTE "Barra de formulas: ",0
	   20 64 65 20 66
	   6F 72 6D 75 6C
	   61 73 3A 20 00

 000008B1 00 00000000		areaTransferencia Cell <> ;AREA DE TRANSFERENCIA  
	   00000008 [
	    00
	   ] 00
	   00000008 [
	    00
	   ] 00

 000008C8 00000000		formulaEntrada DWORD ?
				 
 00000000			.code
				INCLUDE InterfacePlanilha.asm
			      C ;TITLE Planilha-Vintage-Interface(FelipeJoseBento)
			      C ;Arquivos com todas as funçoes relacionadas com a interface com o usuário da Planilha
			      C ;Sendo que essas funçoes são controladas por um controlador
			      C 
 00000000		      C ImprimePlanilha PROC 
			      C 
			      C ; Imprime toda a tabela na Tela para o usuário
			      C ; RECEBE: ESI: Offset endereço da primeira linha da tabela
			      C 
			      C ;Imprimit a planilha toda 
 00000000  BE 00000000 R      C 	mov esi, offset Linha1	; Início da Planilha
 00000005  B9 00000005	      C 	mov ecx, 5				; Numero de Colunas
 0000000A  BA 00000000	      C 	mov edx, 0				; Utilizado em gotoXY
 0000000F  B2 0C	      C 	mov dl, (tamTexto+4)	; Início das Colunas
 00000011  B8 00000000	      C 	mov eax, 0				; Utilizado em WriteChar
 00000016  B0 41	      C 	mov al, 41h				; Charactere "A"
 00000018  E8 00000000 E      C 	call GotoXY 
 0000001D		      C COLUNAS:
 0000001D  E8 00000000 E      C 	call WriteChar			;Imprimir um caractere
 00000022  FE C0	      C 	inc al					;Posicao
 00000024  80 C2 0C	      C 	add dl,(tamTexto+4)		;A Imprimir	
 00000027  E8 00000000 E      C 	call GotoXY				;Mudar Cursor 
 0000002C  E2 EF	      C 	loop COLUNAS			
			      C 
 0000002E  B9 00000009	      C 	mov ecx, 9				; Numero de Colunas
 00000033  BA 00000000	      C 	mov edx, 0				; Utilizado em gotoXY
 00000038  B2 05	      C 	mov dl, 5
 0000003A  B6 01	      C 	mov dh, 1				; Início das Colunas
 0000003C  B8 00000000	      C 	mov eax, 0				; Utilizado em WriteChar
 00000041  B0 01	      C 	mov al, 1h				; Charactere "A"
 00000043  E8 00000000 E      C 	call GotoXY 
 00000048		      C LINHA:						;Agora colocando cabeçalhos nas linhas
 00000048  E8 00000000 E      C 	call WriteDec
 0000004D  FE C0	      C 	inc al
 0000004F  80 C6 02	      C 	add dh, 2
 00000052  E8 00000000 E      C 	call GotoXY 
 00000057  E2 EF	      C 	loop LINHA
			      C 
			      C 	;;PRENCHENDO VALORES (Buscando da memória)
			      C 	;;O preenchemento é feito por linhas, coluna a coluna
			      C 
 00000059  BE 00000000 R      C 	mov esi, OFFSET Linha1
 0000005E  B9 00000009	      C 	mov ecx, 9
 00000063  BA 00000000	      C 	mov edx, 0
 00000068  B6 01	      C 	mov dh, 1
 0000006A		      C PLINHA:	
 0000006A  8B D9	      C 	mov ebx, ecx
 0000006C  B9 00000005	      C 	mov ecx, 5
 00000071  B2 08	      C 	mov dl, (tamTexto)
 00000073		      C PCOLUNA:
			      C 	;EDX está com a POSICAO
			      C 	;ESI está com a célula
			      C 	;Chmando ImprimeCélula
 00000073  E8 00000010	      C 	call ImprimeCelula
			      C 
 00000078  80 C2 0C	      C 	add dl,(tamTexto+4)		;Nova posição da coluna
 0000007B  83 C6 17	      C 	add esi, TYPE CELL		;Novo endereco da célula
 0000007E  E2 F3	      C 	loop PCOLUNA			;Preencher nova coluna
 00000080  80 C6 02	      C 	add dh, 2				;Nova posica da linha
 00000083  8B CB	      C 	mov ecx, ebx			;Retornando contador
 00000085  E2 E3	      C 	loop PLINHA 
			      C 	
			      C 
 00000087  C3		      C 	ret	;Retorna ao arquivo principal
			      C 
 00000088		      C ImprimePlanilha ENDP
			      C 
 00000088		      C ImprimeCelula PROC 
			      C 
			      C ; Procedimento que imprime uma celula na tela 
			      C ; Recebe a posicao em EDX 
			      C ; Recebe o endereco da célula em ESI
			      C ; Utiliza o ecx, sem perder o valor que estava
 00000088  57		      C 	push edi
 00000089  50		      C 	push eax
 0000008A  51		      C 	push ecx
			      C 
 0000008B  E8 00000000 E      C 	call GoToXY
			      C 
 00000090  8D 3E	      C 	lea edi, (Cell  PTR[esi]).typ
 00000092  B0 00	      C 	mov al,0
 00000094  38 07	      C 	cmp [edi], al
 00000096  74 12	      C 	je CELLVAZIA
 00000098  FE C0	      C 	inc al
 0000009A  38 07	      C 	cmp [edi], al
 0000009C  74 21	      C 	je CELLINT
 0000009E  FE C0	      C 	inc al
 000000A0  38 07	      C 	cmp [edi], al
 000000A2  74 27	      C 	je CELLTEXT
 000000A4  FE C0	      C 	inc al
 000000A6  38 07	      C 	cmp [edi], al
 000000A8  74 42	      C 	je CELLFORMULA
			      C 
 000000AA		      C CELLVAZIA:
 000000AA  B9 00000008	      C 	mov ecx, tamTexto
 000000AF  B8 00000000	      C 	mov eax, 0
 000000B4  B0 2D	      C 	mov al, "-"
 000000B6		      C CVaux:
 000000B6  E8 00000000 E      C 	call WriteChar
 000000BB  E2 F9	      C 	loop CVaux
 000000BD  EB 40	      C 	jmp FIMIC
			      C 
 000000BF		      C CELLINT:
 000000BF  8D 7E 01	      C 	lea edi, (Cell  PTR[esi]).numInt
 000000C2  8B 07	      C 	mov eax, [edi]
 000000C4  E8 00000000 E      C 	call WriteInt
 000000C9  EB 34	      C 	jmp FIMIC
			      C 
 000000CB		      C CELLTEXT:
 000000CB  8D 7E 05	      C 	lea edi, (Cell  PTR[esi]).text
 000000CE  52		      C 	push edx
 000000CF  8B D7	      C 	mov edx, edi
 000000D1  E8 00000000 E      C 	call StrLength	;Returna o numero de characteres não nulos
 000000D6  5A		      C 	pop edx
 000000D7  8B C8	      C 	mov ecx, eax
 000000D9  57		      C 	push edi
 000000DA		      C CTaux:
 000000DA  B8 00000000	      C 	mov eax, 0
 000000DF  8A 07	      C 	mov al, [edi]
 000000E1  E8 00000000 E      C 	call WriteChar
 000000E6  47		      C 	inc edi
 000000E7  E2 F1	      C 	loop CTaux
 000000E9  5F		      C 	pop edi
 000000EA  EB 13	      C 	jmp FIMIC
			      C 
 000000EC		      C CELLFORMULA:
			      C 	;Formula digitada pelo usuário
			      C 	;Aqui imprime apenas o resultado que está na formula
 000000EC  57		      C 	push edi
 000000ED  8B FE	      C 	mov edi, esi
 000000EF  E8 000004ED	      C 	call controladorFormula
 000000F4  5F		      C 	pop edi
 000000F5  8D 7E 01	      C 	lea edi, (Cell  PTR[esi]).numInt
 000000F8  8B 07	      C 	mov eax, [edi]
 000000FA  E8 00000000 E      C 	call WriteInt
			      C 
 000000FF		      C FIMIC:
 000000FF  59		      C 	pop ecx
 00000100  58		      C 	pop eax
 00000101  5F		      C 	pop edi
 00000102  C3		      C 	ret 
 00000103		      C ImprimeCelula ENDP
			      C 
 00000103		      C CentralizaCelula PROC
			      C ; Função que altera a posição na tela, deixando o valor
			      C ; da célula centralizado sem alterar o valor de nenhum registrador
			      C ; Recebe a posição do inicio da célula em EDX 
			      C ; Recebe a posicao do valor a ser centralizado em EDI
			      C ; Retorna em EAX o numero de dígitos que a célula tem
			      C 
 00000103  52		      C 	push edx
 00000104  57		      C 	push edi
 00000105  53		      C 	push ebx
 00000106  51		      C 	push ecx
			      C 
 00000107  B8 00000000	      C 	mov eax, 0
 0000010C  BB 00000000	      C 	mov ebx, 0
			      C 	
 00000111		      C CentralizaCelula ENDP
			      C 
 00000111		      C ImprimeMenu PROC
			      C  ; Função que imprime o menu com as funcionalidades presentes na planilha
			      C  ; RETORNA: a opção escolhida em EAX
			      C  ; Opçoes do Menu
			      C  ; 1 - INSERIR VALOR EM UMA CELULA
			      C  ; 2 - DELETAR VALOR DE UMA UMA CELULA 
			      C  ; 3 - COPIAR VALOR DE UMA CÉLULA PARA OUTRA 
			      C  ; 4 - RECORTAR VALOR DE UMA CÉLULA PARA OUTRA 
			      C  ; 5 - DELETAR UMA COLUNA 
			      C  ; 6 - DELETAR UMA LINHA
			      C  ; 7 - FUNÇÃO MODO
			      C  ; 8 - Cont.NUM
			      C  ; 9 - FUNÇÃO MAIOR
			      C 
 00000111  E8 00000000 E      C 	call Crlf
 00000116  E8 00000000 E      C 	call Crlf
 0000011B  52		      C 	push edx
			      C 
			      C 	; Imprimindo o MENU
			      C 	; Com as opçoes 
			      C 
			      C 	;menu BYTE "PlanilhaVintage - Menu",0
 0000011C  BA 0000040B R      C 	mov edx, OFFSET menu
 00000121  E8 00000000 E      C 	call WriteString
 00000126  E8 00000000 E      C 	call Crlf
			      C 	
			      C 	;menuOp1 BYTE "1 - INSERIR VALOR EM UMA CELULA.",0
 0000012B  BA 00000422 R      C 	mov edx, OFFSET menuOp1
 00000130  E8 00000000 E      C 	call WriteString
 00000135  E8 00000000 E      C 	call Crlf
			      C 	
			      C 	;menuOp2 BYTE "2 - DELETAR VALOR DE UMA UMA CELULA.",0 
 0000013A  BA 00000443 R      C 	mov edx, OFFSET menuOp2
 0000013F  E8 00000000 E      C 	call WriteString
 00000144  E8 00000000 E      C 	call Crlf
			      C 	
			      C 	;menuOp3 BYTE "3 - COPIAR VALOR DE UMA CELULA PARA OUTRA.",0 
 00000149  BA 00000468 R      C 	mov edx, OFFSET menuOp3
 0000014E  E8 00000000 E      C 	call WriteString
 00000153  E8 00000000 E      C 	call Crlf
			      C 
			      C 	;menuOp4 BYTE "4 - RECORTAR VALOR DE UMA CELULA PARA OUTRA.",0 
 00000158  BA 00000493 R      C 	mov edx, OFFSET menuOp4
 0000015D  E8 00000000 E      C 	call WriteString
 00000162  E8 00000000 E      C 	call Crlf
			      C 
			      C 	;menuOp5 BYTE "5 - SELECIONAR UMA CELULA.", 0
 00000167  BA 000004C0 R      C 	mov edx, OFFSET menuOp5
 0000016C  E8 00000000 E      C 	call WriteString
 00000171  E8 00000000 E      C 	call Crlf
			      C 
			      C 	;menuOp5 BYTE "6 - DELETAR UMA COLUNA.",0
 00000176  BA 000004DB R      C 	mov edx, OFFSET menuOp6
 0000017B  E8 00000000 E      C 	call WriteString
 00000180  E8 00000000 E      C 	call Crlf
			      C 
			      C 	;menuOp6 BYTE "7 - DELETAR UMA LINHA.",0  
 00000185  BA 000004F3 R      C 	mov edx, OFFSET menuOp7
 0000018A  E8 00000000 E      C 	call WriteString
 0000018F  E8 00000000 E      C 	call Crlf
			      C 	
			      C 	;menuMsg1 BYTE "Digite uma opcao: ",0
 00000194  BA 0000050A R      C 	mov edx, OFFSET menuMsg1
 00000199  E8 00000000 E      C 	call WriteString 
			      C 	
			      C 	;Recendo uma entrada do usuário
			      C 	;Tratando possiveis entradas invalidas
			      C 
 0000019E		      C LeituraOpMenu:  
 0000019E  E8 00000000 E      C 	call ReadInt
 000001A3  70 23	      C     jo  EntradaInvalida
 000001A5  53		      C 	push ebx
 000001A6  BB 00000001	      C 	mov ebx, 1
			      C 
 000001AB  3B C3	      C 	cmp eax, ebx
 000001AD  74 25	      C 	je EntradaValida
 000001AF  43		      C 	inc ebx
			      C 	
 000001B0  3B C3	      C 	cmp eax, ebx
 000001B2  74 20	      C 	je EntradaValida
 000001B4  43		      C 	inc ebx
			      C 
 000001B5  3B C3	      C 	cmp eax, ebx
 000001B7  74 1B	      C 	je EntradaValida
 000001B9  43		      C 	inc ebx
			      C 
 000001BA  3B C3	      C 	cmp eax, ebx
 000001BC  74 16	      C 	je EntradaValida
 000001BE  43		      C 	inc ebx
			      C 
 000001BF  3B C3	      C 	cmp eax, ebx
 000001C1  74 11	      C 	je EntradaValida
 000001C3  43		      C 	inc ebx
			      C 
 000001C4  3B C3	      C 	cmp eax, ebx
 000001C6  74 0C	      C 	je EntradaValida
			      C 
 000001C8		      C EntradaInvalida:
 000001C8  BA 0000051D R      C     mov  edx,OFFSET menuMsgErro
 000001CD  E8 00000000 E      C     call WriteString
 000001D2  EB CA	      C     jmp  LeituraOpMenu
			      C 
 000001D4		      C EntradaValida:
 000001D4  5B		      C 	pop ebx
 000001D5  5A		      C 	pop edx
 000001D6  C3		      C 	ret
 000001D7		      C ImprimeMenu ENDP
			      C 
 000001D7		      C InserirUser PROC
			      C 	;Função com o intuito de passar os parametros 
			      C 	;para a funcao InserirCelula
			      C 	;Quando o usuário digita os valores
			      C 	;RECEBE: ESI com o inicio da Tabela 
			      C 	;No caso a linha e a coluna a se inserir
			      C 	;quando o usuário digita esses valores
 000001D7  50		      C 	push eax
 000001D8  52		      C 	push edx
 000001D9  57		      C 	push edi
 000001DA  53		      C 	push ebx
 000001DB  51		      C 	push ecx
 000001DC  56		      C 	push esi
			      C 
 000001DD  B8 00000000	      C 	mov eax,0
			      C 
			      C 	;inserirMsg1 BYTE "Digite a coluna no qual deseja inserir: ", 0
			      C 
 000001E2  BA 0000054C R      C 	mov edx, OFFSET inserirMsg1
 000001E7  E8 00000000 E      C 	call WriteString
 000001EC  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 000001F1  50		      C 	push eax		 ; Posição da Coluna na Pilha
			      C 
			      C 	;inserirMsg2 BYTE "Digite a linha na qual deseja inserir: ", 0
			      C 
 000001F2  BA 00000575 R      C 	mov edx, OFFSET inserirMsg2
 000001F7  E8 00000000 E      C 	call WriteString
 000001FC  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 	
 00000201  50		      C 	push eax		 ;Posição da Linha na Pilha
			      C 
			      C 	;inserirMsg3 BYTE "Digite o tipo de entrada: (1)Int, (2)String, (3)Formula: ", 0
			      C 
 00000202  BA 0000059D R      C 	mov edx, OFFSET inserirMsg3
 00000207  E8 00000000 E      C 	call WriteString
 0000020C  E8 00000000 E      C 	call ReadHex	 ;EAX = Tipo de Entrada
			      C 
			      C 	;Preenchendo célula Aux com os dados do usuário
			      C 	;Utilizando o tipo de entrada preencher a célula
 00000211  BF 000008B1 R      C 	mov edi, OFFSET areaTransferencia
			      C 	
 00000216  BB 00000001	      C 	mov ebx, 1
 0000021B  3B D8	      C 	cmp ebx, eax
 0000021D  74 12	      C 	je InsereUserInt
 0000021F  BB 00000002	      C 	mov ebx, 2
 00000224  3B D8	      C 	cmp ebx, eax
 00000226  74 22	      C 	je InsereUserString
 00000228  BB 00000003	      C 	mov ebx, 3
 0000022D  3B D8	      C 	cmp ebx, eax
 0000022F  74 35	      C 	je InsereUserFormula
			      C 
 00000231		      C InsereUserInt: 
			      C 	;inserirMsg6 BYTE "Digite o INTEIRO: ",0
 00000231  BA 000005EA R      C 	mov edx, OFFSET inserirMsg6
 00000236  E8 00000000 E      C 	call WriteString
 0000023B  E8 00000000 E      C 	call ReadInt	 ;EAX = ENTRADA
 00000240  89 47 01	      C 	mov (Cell  PTR[edi]).numInt, eax
 00000243  C6 07 01	      C 	mov (Cell  PTR[edi]).typ, 1
 00000246  8B C8	      C 	mov ecx, eax	 ;ECX = ENTRADA
			      C 
 00000248  EB 3D	      C 	jmp FimUserInsere
			      C 
 0000024A		      C InsereUserString:
			      C 	;inserirMsg7 BYTE "Digite uma STRING(Maximo 8 digitos): ",0
 0000024A  BA 000005FD R      C 	mov edx, OFFSET inserirMsg7
 0000024F  E8 00000000 E      C 	call WriteString
			      C 	
			      C 	;Inserindo String
 00000254  C6 07 02	      C 	mov (Cell  PTR[edi]).typ, 2
 00000257  8D 57 05	      C 	lea edx, (Cell  PTR[edi]).text ; EDX endereço de onde sera salvo
 0000025A  B9 00000008	      C 	mov ecx, tamTexto			   ; Tamanho máximo digitado
 0000025F  E8 00000000 E      C 	call ReadString				   ; Salvando direto na memoria	
 00000264  EB 21	      C 	jmp FimUserInsere
			      C 
 00000266		      C InsereUserFormula:
			      C 	;inserirMsg8 BYTE "Digite uma FORMULA(Ex: =A4*A5): ",0
 00000266  BA 00000623 R      C 	mov edx, OFFSET inserirMsg8
 0000026B  E8 00000000 E      C 	call WriteString
			      C 	
			      C 	;Inserindo Formula
 00000270  C6 07 03	      C 	mov (Cell  PTR[edi]).typ, 3
 00000273  8D 57 0E	      C 	lea edx, (Cell  PTR[edi]).formula		; EDX endereço de onde sera salvo
 00000276  B9 00000008	      C 	mov ecx, tamTexto						; Tamanho máximo digitado
 0000027B  E8 00000000 E      C 	call ReadString							; Salvando direto na memoria
			      C 	
 00000280  E8 0000035C	      C 	call controladorFormula	
			      C 	
 00000285  EB 00	      C 	jmp FimUserInsere
			      C 
 00000287		      C FimUserInsere:
			      C 	;Recuperando a posição da linha e da coluna
 00000287  58		      C 	pop eax		;Linha
 00000288  5B		      C 	pop ebx		;Coluna
			      C 
			      C 	;CHAMANDO A FUNCAO INSERE 
 00000289  E8 000001C1	      C 	call EnderecoCelula
 0000028E  E8 00000168	      C 	call InserirCelula
			      C 
			      C 	;Receuperando valores originais dos registradores
 00000293  5E		      C 	pop esi
 00000294  59		      C 	pop ecx
 00000295  5B		      C 	pop ebx
 00000296  5F		      C 	pop edi
 00000297  5A		      C 	pop edx
 00000298  58		      C 	pop eax
			      C 
 00000299  C3		      C 	ret
			      C 
 0000029A		      C InserirUser ENDP
			      C 
 0000029A		      C ExcluirUser PROC
			      C 	;Função com o intuito de passar os parametros 
			      C 	;para a funcao excluir
			      C 	;RECEBE: ESI com o inicio da Tabela
			      C 	;No caso a linha e a coluna a se excluir
			      C 	;quando o usuário digita esses valores
			      C 
 0000029A  52		      C 	push edx
 0000029B  50		      C 	push eax
 0000029C  53		      C 	push ebx
			      C 	;Recebendo os valores do usuário
			      C 
 0000029D  BA 00000644 R      C 	mov edx, OFFSET excluirMsg1
 000002A2  E8 00000000 E      C 	call WriteString
 000002A7  E8 00000000 E      C 	call ReadHex	;EAX = COLUNA
 000002AC  50		      C 	push eax		;Coluna na pilha
			      C 
 000002AD  BA 00000673 R      C 	mov edx, OFFSET excluirMsg2
 000002B2  E8 00000000 E      C 	call WriteString
 000002B7  E8 00000000 E      C 	call ReadHex	;EAX = Linha
 000002BC  50		      C 	push eax		;Linha na PILHA
			      C 
 000002BD  58		      C 	pop eax
 000002BE  5B		      C 	pop ebx
			      C 	
 000002BF  56		      C 	push esi
 000002C0  E8 0000018A	      C 	call EnderecoCelula
 000002C5  E8 000001C1	      C 	call ExcluirCelula
 000002CA  5E		      C 	pop esi
			      C 
			      C 	;Recuperando valores iniciais 
			      C 
 000002CB  5B		      C 	pop ebx
 000002CC  58		      C 	pop eax
 000002CD  5A		      C 	pop edx
			      C 
 000002CE  C3		      C 	ret
			      C 
 000002CF		      C ExcluirUser ENDP
			      C 
 000002CF		      C CopiarUser PROC
			      C 	;Procedimento que executa a funcionalida(Copiar/Colar) com o usuario
			      C 	;Solicita a Celula a ser copiada
			      C 	;Solicita o destino a ser colado
			      C 	;Executa a ação Copiar/Colar
 000002CF  56		      C 	push esi
 000002D0  50		      C 	push eax
 000002D1  52		      C 	push edx
 000002D2  53		      C 	push ebx
			      C 
 000002D3  B8 00000000	      C 	mov eax,0
			      C 
			      C 	;copiarMsg1	BYTE "Digite a coluna da celula que deseja copiar: ",0
			      C 
 000002D8  BA 000006BE R      C 	mov edx, OFFSET copiarMsg1
 000002DD  E8 00000000 E      C 	call WriteString
 000002E2  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 000002E7  8B D8	      C 	mov ebx, eax	 ; EBX recebe a COLUNA
			      C 
			      C 	;copiarMsg2	BYTE "Digite a linha da celula que deseja copiar: ", 0
			      C 
 000002E9  BA 000006EC R      C 	mov edx, OFFSET copiarMsg2
 000002EE  E8 00000000 E      C 	call WriteString
 000002F3  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 
 000002F8  BE 00000000 R      C 	mov esi, OFFSET Linha1
 000002FD  E8 0000014D	      C 	call EnderecoCelula
 00000302  E8 000001CB	      C 	call CopiarCelula
			      C 
			      C 	;copiarMsg3	BYTE "Digite a coluna da celula para onde deseja colar: ",0
			      C 
 00000307  BA 00000719 R      C 	mov edx, OFFSET copiarMsg3
 0000030C  E8 00000000 E      C 	call WriteString
 00000311  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 00000316  8B D8	      C 	mov ebx, eax	 ; EBX recebe a COLUNA
			      C 
			      C 	;copiarMsg4	BYTE "Digite a linha da celula para onde  deseja colar: ", 0
			      C 
 00000318  BA 0000074C R      C 	mov edx, OFFSET copiarMsg4
 0000031D  E8 00000000 E      C 	call WriteString
 00000322  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 
 00000327  BE 00000000 R      C 	mov esi, OFFSET Linha1
 0000032C  E8 0000011E	      C 	call EnderecoCelula
 00000331  E8 000001B1	      C 	call ColarCelula
			      C 
			      C 	;Recuperando Registradores
 00000336  5B		      C 	pop ebx
 00000337  5A		      C 	pop edx
 00000338  58		      C 	pop eax
 00000339  5E		      C 	pop esi
			      C 
 0000033A  C3		      C 	ret
 0000033B		      C CopiarUser ENDP
			      C 
 0000033B		      C RecortarUser PROC
			      C 	;Procedimento que executa a funcionalida(Recortar/Colar) com o usuario
			      C 	;Solicita a Celula a ser recortado
			      C 	;Solicita o destino a ser colado
			      C 	;Executa a ação Recortar/Colar
			      C 
 0000033B  56		      C 	push esi
 0000033C  50		      C 	push eax
 0000033D  52		      C 	push edx
 0000033E  53		      C 	push ebx
			      C 
 0000033F  B8 00000000	      C 	mov eax,0
			      C 
			      C 	;recortarMsg1 BYTE "Digite a coluna da celula que deseja recortar: ",0
			      C 
 00000344  BA 0000077F R      C 	mov edx, OFFSET recortarMsg1
 00000349  E8 00000000 E      C 	call WriteString
 0000034E  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 00000353  8B D8	      C 	mov ebx, eax	 ; EBX recebe a COLUNA
			      C 
			      C 	;recortarMsg2 BYTE "Digite a linha da celula que deseja recortar: ",0
			      C 
 00000355  BA 000007AF R      C 	mov edx, OFFSET recortarMsg2
 0000035A  E8 00000000 E      C 	call WriteString
 0000035F  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 
 00000364  BE 00000000 R      C 	mov esi, OFFSET Linha1
 00000369  E8 000000E1	      C 	call EnderecoCelula
 0000036E  E8 0000015F	      C 	call CopiarCelula
 00000373  E8 00000113	      C 	call ExcluirCelula
			      C 	
			      C 	;recortarMsg3 BYTE "Digite a coluna da celula onde deseja colar: ",0
 00000378  BA 000007DE R      C 	mov edx, OFFSET recortarMsg3
 0000037D  E8 00000000 E      C 	call WriteString
 00000382  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 00000387  8B D8	      C 	mov ebx, eax	 ; EBX recebe a COLUNA
			      C 
			      C 	;copiarMsg4	BYTE "Digite a linha da celula para onde  deseja colar: ", 0
			      C 
 00000389  BA 0000080C R      C 	mov edx, OFFSET recortarMsg4
 0000038E  E8 00000000 E      C 	call WriteString
 00000393  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 
 00000398  BE 00000000 R      C 	mov esi, OFFSET Linha1
 0000039D  E8 000000AD	      C 	call EnderecoCelula
 000003A2  E8 00000140	      C 	call ColarCelula
			      C 
			      C 	;Recuperando Registradores
 000003A7  5B		      C 	pop ebx
 000003A8  5A		      C 	pop edx
 000003A9  58		      C 	pop eax
 000003AA  5E		      C 	pop esi
			      C 
 000003AB  C3		      C 	ret
 000003AC		      C RecortarUser ENDP
			      C 
 000003AC		      C SelecionaCelula PROC
			      C 	;Procedimento para imprimir a Barra de Formulas 
			      C 	;Mostrando assim a fórmula de uma determinada célula
			      C 
			      C 	;Guardando valores primitivos dos registradores
 000003AC  50		      C 	push eax
 000003AD  53		      C 	push ebx
 000003AE  56		      C 	push esi
 000003AF  52		      C 	push edx
			      C 
			      C 	;selecionarMsg1 BYTE "Digite a coluna da celula que deseja selecionar: ", 0
			      C 
 000003B0  BA 0000083A R      C 	mov edx, OFFSET selecionarMsg1
 000003B5  E8 00000000 E      C 	call WriteString
 000003BA  E8 00000000 E      C 	call ReadHex	 ; EAX = COLUNA
 000003BF  8B D8	      C 	mov ebx, eax	 ; EBX recebe a COLUNA
			      C 
			      C 	;selecionarMsg2 BYTE "Digite a linha da celula que deseja selecionar: ", 0
			      C 
 000003C1  BA 0000086C R      C 	mov edx, OFFSET selecionarMsg2
 000003C6  E8 00000000 E      C 	call WriteString
 000003CB  E8 00000000 E      C 	call ReadHex	 ;EAX = LINHA
			      C 
 000003D0  BE 00000000 R      C 	mov esi, OFFSET Linha1
 000003D5  E8 00000075	      C 	call EnderecoCelula
			      C 
			      C 	;selecionarMsg3 BYTE "Barra de formulas: ",0
			      C 	
 000003DA  BA 0000089D R      C 	mov edx, OFFSET selecionarMsg3
 000003DF  E8 00000000 E      C 	call Crlf
 000003E4  E8 00000000 E      C 	call WriteString
			      C 
 000003E9  8D 56 0E	      C 	lea edx,(CELL PTR[esi]).formula
 000003EC  E8 00000000 E      C 	call WriteString
 000003F1  E8 00000000 E      C 	call Crlf
			      C 
			      C 	;Recuperando valores
 000003F6  5A		      C 	pop edx
 000003F7  5E		      C 	pop esi
 000003F8  5B		      C 	pop ebx
 000003F9  58		      C 	pop eax
			      C 		
 000003FA  C3		      C 	ret
 000003FB		      C SelecionaCelula ENDP
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
				INCLUDE FuncionalidadesPlanilha.asm
			      C ;TITLE Planilha-Vintage-Funcionalidades(FelipeJoseBento)
			      C ;Arquivos com todas as funçoes relacionadas com manipulação de celulas
			      C 
			      C 
 000003FB		      C InserirCelula PROC
			      C 	 ; Procedimento para inserir um valor em uma célula
			      C 	 ; O usuário primeiramente digita a coluna que o valor seria inserido
			      C 	 ; em seguida digita a linha
			      C 	 ; Apos o usuário digita o tipo de valor que ele irá inserir (1->Inteiro , 2->String, 3->Fórmula)
			      C 	 ; RECEBE: Origem(Área de tranferencia ou Célula da Planilha) em EDI
			      C 	 ; RECEBE: Destino em ESI
			      C 	
			      C 	;Guardando valores dos registradores
 000003FB  56		      C 	push esi
 000003FC  51		      C 	push ecx
 000003FD  52		      C 	push edx
 000003FE  50		      C 	push eax
			      C 
			      C 	;Inserindo Valor
 000003FF  B8 00000000	      C 	mov eax, 0
 00000404  8B 47 01	      C 	mov eax, (Cell  PTR[edi]).numInt
 00000407  89 46 01	      C 	mov (Cell  PTR[esi]).numInt, eax  
 0000040A  B8 00000000	      C 	mov eax, 0
 0000040F  8A 07	      C 	mov al, (Cell  PTR[edi]).typ
 00000411  88 06	      C 	mov (Cell  PTR[esi]).typ, al
 00000413  B8 00000000	      C 	mov eax, 0
 00000418  B9 00000008	      C 	mov ecx, tamTexto
 0000041D  8D 57 05	      C 	lea edx, (Cell  PTR[edi]).text
 00000420  53		      C 	push ebx
 00000421  8D 5E 05	      C 	lea ebx, (Cell  PTR[esi]).text
 00000424		      C LoopInsere:
 00000424  B8 00000000	      C 	mov eax, 0
 00000429  8A 02	      C 	mov al, [edx]
 0000042B  88 03	      C 	mov [ebx], al
 0000042D  42		      C 	inc edx
 0000042E  43		      C 	inc ebx
 0000042F  E2 F3	      C 	loop LoopInsere 
 00000431  B9 00000008	      C 	mov ecx, tamTexto
 00000436  8D 57 0E	      C 	lea edx, (Cell  PTR[edi]).formula
 00000439  8D 5E 0E	      C 	lea ebx, (Cell  PTR[esi]).formula
 0000043C		      C LoopInsere2:
 0000043C  B8 00000000	      C 	mov eax, 0
 00000441  8A 02	      C 	mov al, [edx]
 00000443  88 03	      C 	mov [ebx], al
 00000445  42		      C 	inc edx
 00000446  43		      C 	inc ebx
 00000447  E2 F3	      C 	loop LoopInsere2
 00000449  5B		      C 	pop ebx
			      C 	
			      C 	;Recuperando Valores
 0000044A  58		      C 	pop eax
 0000044B  5A		      C 	pop edx
 0000044C  59		      C 	pop ecx 
 0000044D  5E		      C 	pop esi
			      C 
 0000044E  C3		      C 	ret
			      C 	
 0000044F		      C InserirCelula ENDP
			      C 
 0000044F		      C EnderecoCelula PROC
			      C 	;Função que calcula a posição na mémoria em coloca o resultado em ESI
			      C 	;RECEBE: eax com a Linha da célula
			      C 	;RECEBE: ebx com a Coluna da célula
			      C 	;RECEBE: esi com o Início da TABELA
			      C 	;RETORNA: esi com o endereco da celula na memória
 0000044F  53		      C 	push ebx
 00000450  52		      C 	push edx
 00000451  50		      C 	push eax
 00000452  51		      C 	push ecx
			      C 
			      C 	;FORMULA PARA O ENDEREÇO DESTINO
			      C 	;Planilha[i, j] = offset Linha1 + (i * 5 *sizeof(Celula)) + (j * sizeof(Celula))
			      C 	;Tamanho da CELL é 23 bytes
			      C 	;Numero de coluna é 5
			      C 
 00000453  48		      C 	dec eax		;Pois a memória começa na posição ZERO e não na posição 1
 00000454  BA 00000005	      C 	mov edx, 5	
			      C 	;Multiplicando Linha*5
			      C 	;Pois quando pula uma linha
			      C 	;Na verdade pula 5 colunas
 00000459  F7 E2	      C 	mul edx		
 0000045B  50		      C 	push eax	
 0000045C  BA 00000000	      C 	mov edx, 0
 00000461  8B C3	      C 	mov eax, ebx
 00000463  BB 0000000A	      C 	mov ebx, 0Ah
 00000468  F7 F3	      C 	div ebx
 0000046A  8B DA	      C 	mov ebx, edx
 0000046C  58		      C 	pop eax
			      C 
			      C 	;Calculo do Endereço da Célula
 0000046D  BE 00000000 R      C 	mov esi, OFFSET Linha1
 00000472  BA 00000000	      C 	mov edx, 0
 00000477  B9 00000017	      C 	mov ecx, TYPE CELL
 0000047C  F7 E1	      C 	mul ecx
 0000047E  03 F0	      C 	add esi, eax
			      C 
 00000480  8B C3	      C 	mov eax, ebx
 00000482  F7 E1	      C 	mul ecx
 00000484  03 F0	      C 	add esi, eax
			      C 	
 00000486  59		      C 	pop ecx
 00000487  58		      C 	pop eax
 00000488  5A		      C 	pop edx
 00000489  5B		      C 	pop ebx
			      C 
 0000048A  C3		      C 	ret
 0000048B		      C EnderecoCelula ENDP
			      C 
 0000048B		      C ExcluirCelula PROC
			      C 	;Função para excluir uma célula da planilha
			      C 	;RECEBE ESI com o endereco da celula a ser excluida
			      C 	;Após excluir, confirma a exclusão
 0000048B  50		      C 	push eax
 0000048C  52		      C 	push edx
 0000048D  51		      C 	push ecx
			      C 
 0000048E  8D 16	      C 	lea edx, (Cell  PTR[esi]).typ ; EDX endereço do tipo
 00000490  B8 00000000	      C 	mov eax, 0
 00000495  3B 02	      C 	cmp eax, [edx]
 00000497  74 35	      C 	je ExcluirFim
 00000499  40		      C 	inc eax
 0000049A  3B 02	      C 	cmp eax, [edx]
 0000049C  74 0A	      C 	je ExcluirInt
 0000049E  40		      C 	inc eax
 0000049F  3B 02	      C 	cmp eax, [edx]
 000004A1  74 12	      C 	je ExcluirString
 000004A3  40		      C 	inc eax
 000004A4  3B 02	      C 	cmp eax, [edx]
 000004A6  74 24	      C 	je ExcluirFormula
			      C 
 000004A8		      C ExcluirInt:
 000004A8  C6 06 00	      C 	mov (Cell  PTR[esi]).typ, 0		;Célula Vazia
 000004AB  B8 00000000	      C 	mov eax, 0
 000004B0  89 46 01	      C 	mov (Cell  PTR[esi]).numInt, eax
 000004B3  EB 19	      C 	jmp ExcluirFim
			      C 
 000004B5		      C ExcluirString:
 000004B5  C6 06 00	      C 	mov (Cell  PTR[esi]).typ, 0		;Célula Vazia
 000004B8  8D 56 05	      C 	lea edx, (Cell  PTR[esi]).text	;EDX endereço com o texto a ser apagado
 000004BB  B9 00000008	      C 	mov ecx, tamTexto
			      C 
			      C 	;Colocando NULL na String da célula
			      C 
 000004C0		      C ExluirStringAux:
 000004C0  B8 00000000	      C 	mov eax,0
 000004C5  88 02	      C 	mov [edx], al
 000004C7  42		      C 	inc edx
 000004C8  E2 F6	      C 	loop ExluirStringAux
 000004CA  EB 02	      C 	jmp ExcluirFim
			      C 
 000004CC		      C ExcluirFormula:
 000004CC  EB 00	      C 	jmp ExcluirFim
			      C 
 000004CE		      C ExcluirFim:
			      C 	;recuperando valores 
 000004CE  59		      C 	pop ecx
 000004CF  5A		      C 	pop edx
 000004D0  58		      C 	pop eax
			      C 
 000004D1  C3		      C 	ret
 000004D2		      C ExcluirCelula ENDP
			      C 
			      C 
			      C 
 000004D2		      C CopiarCelula PROC
			      C 	;Procedimento que copia uma célula para Area de Transferencia (CellAux Cell <>)
			      C 	;RECEBE: Endereco da celula a ser copiada em ESI
			      C 	
 000004D2  57		      C 	push edi
 000004D3  52		      C 	push edx
			      C 	
 000004D4  BA 000008B1 R      C 	mov edx, OFFSET areaTransferencia
 000004D9  8B FE	      C 	mov edi, esi ;ORIGEM (Recebida em ESI)
 000004DB  56		      C 	push esi
 000004DC  8B F2	      C 	mov esi, edx ;DESTINO
			      C 
 000004DE  E8 FFFFFF18	      C 	call InserirCelula
			      C 	;Recuperando valores 
 000004E3  5E		      C 	pop esi
 000004E4  5A		      C 	pop edx
 000004E5  5F		      C 	pop edi
			      C 	
 000004E6  C3		      C 	ret
 000004E7		      C CopiarCelula ENDP
			      C 
			      C 
			      C 
 000004E7		      C RecortarCelula PROC
			      C 	;Procedimento que cola uma célula da área de transferência para uma célula da planilha
			      C 	;RECEBE: Endereco de Destino em ESI
			      C 
 000004E7		      C RecortarCelula ENDP
			      C 
 000004E7		      C ColarCelula PROC
			      C 	;Procedimento que cola uma célula da área de transferência para uma célula da planilha
			      C 	;RECEBE: Endereco de Destino em ESI
 000004E7  57		      C 	push edi
			      C 
 000004E8  BF 000008B1 R      C 	mov edi, OFFSET areaTransferencia
 000004ED  E8 FFFFFF09	      C 	call InserirCelula
			      C 
 000004F2  5F		      C 	pop edi
 000004F3  C3		      C 	ret
 000004F4		      C ColarCelula ENDP
			      C 
 000004F4		      C ExcluirColuna PROC
			      C 
 000004F4		      C ExcluirColuna ENDP
			      C 
 000004F4		      C CopiarColuna PROC
			      C 
 000004F4		      C CopiarColuna ENDP
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
				INCLUDE ControladorPlanilha.asm
			      C ;TITLE Planilha-Vintage-Controlador(FelipeJoseBento)
			      C ;Arquivo que controla as entradas do usuário e os procedimentos da InterfacePlanilha
			      C 
 000004F4		      C controladorPrincipal PROC 
			      C 	;Primeiro procedimento iniciado na aplicação 
 000004F4  50		      C 	push eax
 000004F5  53		      C 	push ebx
 000004F6  56		      C 	push esi
 000004F7		      C InicioControlador:
 000004F7  BE 00000000 R      C 	mov esi, OFFSET Linha1	;Temos aqui o início da Planilha
			      C 
 000004FC  E8 00000000 E      C 	call Clrscr
 00000501  E8 FFFFFAFA	      C 	call ImprimePlanilha ;Imprime Planilha na tela
 00000506  E8 FFFFFC06	      C 	call ImprimeMenu	 ;Imprime Menu para o usuario(Retorna Opçao em EAX)
			      C 	; Opçoes do Menu
			      C 	; 1 - INSERIR VALOR EM UMA CELULA
			      C 	; 2 - DELETAR VALOR DE UMA UMA CELULA 
			      C 	; 3 - COPIAR VALOR DE UMA CÉLULA PARA OUTRA 
			      C 	; 4 - RECORTAR VALOR DE UMA CÉLULA PARA OUTRA 
			      C 	; 5 - SELECIONAR CELULA
			      C 	; 6 - DELETAR UMA COLUNA 
			      C 	; 7 - DELETAR UMA LINHA
			      C 
			      C 	;Vendo a opçao selecionada
 0000050B  BB 00000001	      C 	mov ebx,1
 00000510  3B D8	      C 	cmp ebx, eax
 00000512  74 2F	      C 	je controladorInsere
 00000514  43		      C 	inc ebx
			      C 	
 00000515  3B D8	      C 	cmp ebx, eax
 00000517  74 45	      C 	je controladorDeleta
 00000519  43		      C 	inc ebx
			      C 
 0000051A  3B D8	      C 	cmp ebx, eax
 0000051C  74 5B	      C 	je controladorCopia
 0000051E  43		      C 	inc ebx
			      C 
 0000051F  3B D8	      C 	cmp ebx, eax
 00000521  74 71	      C 	je controladorRecorta
 00000523  43		      C 	inc ebx
			      C 
 00000524  3B D8	      C 	cmp ebx, eax
 00000526  0F 84 00000083     C 	je controladorSelecionaCelula
 0000052C  43		      C 	inc ebx
			      C 
 0000052D  3B D8	      C 	cmp ebx, eax
 0000052F  0F 84 0000009F     C 	je controladorDColuna
 00000535  43		      C 	inc ebx
			      C 
 00000536  3B D8	      C 	cmp ebx, eax
 00000538  0F 84 00000098     C 	je controladorDLinha
			      C 	
 0000053E  E9 00000095	      C 	jmp FimControlador
			      C 
			      C ;1
 00000543		      C controladorInsere:
 00000543  E8 00000000 E      C 	call Clrscr
 00000548  E8 FFFFFAB3	      C 	call ImprimePlanilha
 0000054D  E8 00000000 E      C 	call Crlf
 00000552  E8 00000000 E      C 	call Crlf
 00000557  E8 FFFFFC7B	      C 	call InserirUser
 0000055C  EB 7A	      C 	jmp FimControlador
			      C 
			      C ;2
 0000055E		      C controladorDeleta:
 0000055E  E8 00000000 E      C 	call Clrscr
 00000563  E8 FFFFFA98	      C 	call ImprimePlanilha
 00000568  E8 00000000 E      C 	call Crlf
 0000056D  E8 00000000 E      C 	call Crlf
 00000572  E8 FFFFFD23	      C 	call ExcluirUser
 00000577  EB 5F	      C 	jmp FimControlador
			      C 
			      C ;3
 00000579		      C controladorCopia:
 00000579  E8 00000000 E      C 	call Clrscr
 0000057E  E8 FFFFFA7D	      C 	call ImprimePlanilha
 00000583  E8 00000000 E      C 	call Crlf
 00000588  E8 00000000 E      C 	call Crlf
 0000058D  E8 FFFFFD3D	      C 	call CopiarUser
 00000592  EB 44	      C 	jmp FimControlador
			      C 
			      C ;4
 00000594		      C controladorRecorta:
 00000594  E8 00000000 E      C 	call Clrscr
 00000599  E8 FFFFFA62	      C 	call ImprimePlanilha
 0000059E  E8 00000000 E      C 	call Crlf
 000005A3  E8 00000000 E      C 	call Crlf
 000005A8  E8 FFFFFD8E	      C 	call RecortarUser
 000005AD  EB 29	      C 	jmp FimControlador
			      C 
			      C ;5
 000005AF		      C controladorSelecionaCelula:
 000005AF  E8 00000000 E      C 	call Clrscr
 000005B4  E8 FFFFFA47	      C 	call ImprimePlanilha
 000005B9  E8 00000000 E      C 	call Crlf
 000005BE  E8 00000000 E      C 	call Crlf
 000005C3  E8 FFFFFDE4	      C 	call SelecionaCelula
 000005C8  E8 00000000 E      C 	call Crlf
 000005CD  E8 00000000 E      C 	call WaitMsg
 000005D2  EB 04	      C 	jmp FimControlador
			      C 
			      C ;6
 000005D4		      C controladorDColuna:
 000005D4  EB 02	      C 	jmp FimControlador
			      C 
			      C ;7
 000005D6		      C controladorDLinha:
 000005D6  EB 00	      C 	jmp FimControlador
			      C 
 000005D8		      C FimControlador:
 000005D8  E9 FFFFFF1A	      C 	jmp InicioControlador
 000005DD  5E		      C 	pop esi
 000005DE  5B		      C 	pop ebx
 000005DF  58		      C 	pop eax
			      C 
 000005E0  C3		      C 	ret
 000005E1		      C controladorPrincipal ENDP
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
			      C 
				INCLUDE ControladorFormulas.asm
			      C ;TITLE Planilha-Vintage-ControladorFormulas(FelipeJoseBento)
			      C ;Arquivo que controla as formulas utilizadas pelo usuário
			      C 
 000005E1		      C controladorFormula PROC
			      C 	;Procedimento para verificar a formula inserida pelo usuário
			      C 	;Atualiza a planilha
			      C 	;RECEBE: Endereço da CELULA que contem a formula em EDI
			      C 	;FORMULAS SÃO DO TIPO: =XN*XN ,
			      C 	; onde X é uma coluna 
			      C 	; onde N é uma linha
			      C 	; onde * é um operador que pode ser (* , + , - ) 
			      C 	
			      C 	;Guardando valores dos registradores
 000005E1  52		      C 	push edx
 000005E2  56		      C 	push esi
 000005E3  50		      C 	push eax
 000005E4  53		      C 	push ebx
 000005E5  51		      C 	push ecx
			      C 
			      C 
 000005E6  8D 57 0E	      C 	lea edx, (Cell  PTR[edi]).formula
			      C 
 000005E9  BB 00000000	      C 	mov ebx, 0
 000005EE  8A 5A 01	      C 	mov bl, [edx+1] ; Coluna do primeiro membro
 000005F1  80 EB 37	      C 	sub bl, 37h
 000005F4  B8 00000000	      C 	mov eax, 0
 000005F9  8A 42 02	      C 	mov al, [edx+2] ; Linha do primeiro membro
 000005FC  2C 30	      C 	sub al, 30h
			      C 
 000005FE  BE 00000000 R      C 	mov esi, OFFSET Linha1
 00000603  E8 FFFFFE47	      C 	call EnderecoCelula
			      C 
 00000608  8D 76 01	      C 	lea esi, (Cell  PTR[esi]).numInt
 0000060B  FF 36	      C 	push [esi]		; Operando 1 na pilha
			      C 
 0000060D  BB 00000000	      C 	mov ebx, 0
 00000612  8A 5A 04	      C 	mov bl, [edx+4] ; Coluna do primeiro membro
 00000615  80 EB 37	      C 	sub bl, 37h
 00000618  B8 00000000	      C 	mov eax, 0
 0000061D  8A 42 05	      C 	mov al, [edx+5] ; Linha do primeiro membro
 00000620  2C 30	      C 	sub al, 30h
			      C 
 00000622  BE 00000000 R      C 	mov esi, OFFSET Linha1
 00000627  E8 FFFFFE23	      C 	call EnderecoCelula
			      C 
 0000062C  8D 76 01	      C 	lea esi, (Cell  PTR[esi]).numInt
 0000062F  FF 36	      C 	push [esi]		; Operando 2 na pilha
			      C 
			      C 	;;FORMULA 
 00000631  B8 00000000	      C 	mov eax, 0
 00000636  8A 42 02	      C 	mov al, [edx+2] ;OPERADOR
			      C 
 00000639  5B		      C 	pop ebx
 0000063A  58		      C 	pop eax
 0000063B  F7 E3	      C 	mul ebx
			      C 
 0000063D  89 47 01	      C 	mov (Cell  PTR[edi]).numInt, eax
			      C 
			      C 	;Recuperando valroes dos registradores
 00000640  59		      C 	pop ecx
 00000641  5B		      C 	pop ebx
 00000642  58		      C 	pop eax
 00000643  5E		      C 	pop esi
 00000644  5A		      C 	pop edx
			      C 
 00000645  C3		      C 	ret
 00000646		      C controladorFormula ENDP
			      C 

 00000646			main PROC

 00000646  E8 FFFFFEA9			call controladorPrincipal  
					
					exit
 00000652			main ENDP

				END main
Microsoft (R) Macro Assembler Version 12.00.30501.0	    05/16/16 19:43:01
!Planilha-Vintage(FelipeJoseBento			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
Cell . . . . . . . . . . . . . .	 00000017
  typ  . . . . . . . . . . . . .	 00000000	 Byte
  numInt . . . . . . . . . . . .	 00000001	 DWord
  text . . . . . . . . . . . . .	 00000005	 Byte
  formula  . . . . . . . . . . .	 0000000E	 Byte
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000008CC Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000652 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CentralizaCelula . . . . . . . .	P Near	 00000103 _TEXT	Length= 0000000E Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ColarCelula  . . . . . . . . . .	P Near	 000004E7 _TEXT	Length= 0000000D Public STDCALL
CopiarCelula . . . . . . . . . .	P Near	 000004D2 _TEXT	Length= 00000015 Public STDCALL
CopiarColuna . . . . . . . . . .	P Near	 000004F4 _TEXT	Length= 00000000 Public STDCALL
CopiarUser . . . . . . . . . . .	P Near	 000002CF _TEXT	Length= 0000006C Public STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EnderecoCelula . . . . . . . . .	P Near	 0000044F _TEXT	Length= 0000003C Public STDCALL
ExcluirCelula  . . . . . . . . .	P Near	 0000048B _TEXT	Length= 00000047 Public STDCALL
  ExcluirInt . . . . . . . . . .	L Near	 000004A8 _TEXT	
  ExcluirString  . . . . . . . .	L Near	 000004B5 _TEXT	
  ExluirStringAux  . . . . . . .	L Near	 000004C0 _TEXT	
  ExcluirFormula . . . . . . . .	L Near	 000004CC _TEXT	
  ExcluirFim . . . . . . . . . .	L Near	 000004CE _TEXT	
ExcluirColuna  . . . . . . . . .	P Near	 000004F4 _TEXT	Length= 00000000 Public STDCALL
ExcluirUser  . . . . . . . . . .	P Near	 0000029A _TEXT	Length= 00000035 Public STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ImprimeCelula  . . . . . . . . .	P Near	 00000088 _TEXT	Length= 0000007B Public STDCALL
  CELLVAZIA  . . . . . . . . . .	L Near	 000000AA _TEXT	
  CVaux  . . . . . . . . . . . .	L Near	 000000B6 _TEXT	
  CELLINT  . . . . . . . . . . .	L Near	 000000BF _TEXT	
  CELLTEXT . . . . . . . . . . .	L Near	 000000CB _TEXT	
  CTaux  . . . . . . . . . . . .	L Near	 000000DA _TEXT	
  CELLFORMULA  . . . . . . . . .	L Near	 000000EC _TEXT	
  FIMIC  . . . . . . . . . . . .	L Near	 000000FF _TEXT	
ImprimeMenu  . . . . . . . . . .	P Near	 00000111 _TEXT	Length= 000000C6 Public STDCALL
  LeituraOpMenu  . . . . . . . .	L Near	 0000019E _TEXT	
  EntradaInvalida  . . . . . . .	L Near	 000001C8 _TEXT	
  EntradaValida  . . . . . . . .	L Near	 000001D4 _TEXT	
ImprimePlanilha  . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000088 Public STDCALL
  COLUNAS  . . . . . . . . . . .	L Near	 0000001D _TEXT	
  LINHA  . . . . . . . . . . . .	L Near	 00000048 _TEXT	
  PLINHA . . . . . . . . . . . .	L Near	 0000006A _TEXT	
  PCOLUNA  . . . . . . . . . . .	L Near	 00000073 _TEXT	
InserirCelula  . . . . . . . . .	P Near	 000003FB _TEXT	Length= 00000054 Public STDCALL
  LoopInsere . . . . . . . . . .	L Near	 00000424 _TEXT	
  LoopInsere2  . . . . . . . . .	L Near	 0000043C _TEXT	
InserirUser  . . . . . . . . . .	P Near	 000001D7 _TEXT	Length= 000000C3 Public STDCALL
  InsereUserInt  . . . . . . . .	L Near	 00000231 _TEXT	
  InsereUserString . . . . . . .	L Near	 0000024A _TEXT	
  InsereUserFormula  . . . . . .	L Near	 00000266 _TEXT	
  FimUserInsere  . . . . . . . .	L Near	 00000287 _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RecortarCelula . . . . . . . . .	P Near	 000004E7 _TEXT	Length= 00000000 Public STDCALL
RecortarUser . . . . . . . . . .	P Near	 0000033B _TEXT	Length= 00000071 Public STDCALL
SelecionaCelula  . . . . . . . .	P Near	 000003AC _TEXT	Length= 0000004F Public STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
controladorFormula . . . . . . .	P Near	 000005E1 _TEXT	Length= 00000065 Public STDCALL
controladorPrincipal . . . . . .	P Near	 000004F4 _TEXT	Length= 000000ED Public STDCALL
  InicioControlador  . . . . . .	L Near	 000004F7 _TEXT	
  controladorInsere  . . . . . .	L Near	 00000543 _TEXT	
  controladorDeleta  . . . . . .	L Near	 0000055E _TEXT	
  controladorCopia . . . . . . .	L Near	 00000579 _TEXT	
  controladorRecorta . . . . . .	L Near	 00000594 _TEXT	
  controladorSelecionaCelula . .	L Near	 000005AF _TEXT	
  controladorDColuna . . . . . .	L Near	 000005D4 _TEXT	
  controladorDLinha  . . . . . .	L Near	 000005D6 _TEXT	
  FimControlador . . . . . . . .	L Near	 000005D8 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000646 _TEXT	Length= 0000000C Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
Linha1 . . . . . . . . . . . . .	Cell	 00000000 _DATA	
Linha2 . . . . . . . . . . . . .	Cell	 00000073 _DATA	
Linha3 . . . . . . . . . . . . .	Cell	 000000E6 _DATA	
Linha4 . . . . . . . . . . . . .	Cell	 00000159 _DATA	
Linha5 . . . . . . . . . . . . .	Cell	 000001CC _DATA	
Linha6 . . . . . . . . . . . . .	Cell	 0000023F _DATA	
Linha7 . . . . . . . . . . . . .	Cell	 000002B2 _DATA	
Linha8 . . . . . . . . . . . . .	Cell	 00000325 _DATA	
Linha9 . . . . . . . . . . . . .	Cell	 00000398 _DATA	
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TotalColunas . . . . . . . . . .	Number	 00000005h   
TotalLinhas  . . . . . . . . . .	Number	 0000000Bh   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
areaTransferencia  . . . . . . .	Cell	 000008B1 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
copiarMsg1 . . . . . . . . . . .	Byte	 000006BE _DATA	
copiarMsg2 . . . . . . . . . . .	Byte	 000006EC _DATA	
copiarMsg3 . . . . . . . . . . .	Byte	 00000719 _DATA	
copiarMsg4 . . . . . . . . . . .	Byte	 0000074C _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
excluirMsg1  . . . . . . . . . .	Byte	 00000644 _DATA	
excluirMsg2  . . . . . . . . . .	Byte	 00000673 _DATA	
excluirMsg3  . . . . . . . . . .	Byte	 000006A1 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
formulaEntrada . . . . . . . . .	DWord	 000008C8 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inserirMsg1  . . . . . . . . . .	Byte	 0000054C _DATA	
inserirMsg2  . . . . . . . . . .	Byte	 00000575 _DATA	
inserirMsg3  . . . . . . . . . .	Byte	 0000059D _DATA	
inserirMsg5  . . . . . . . . . .	Byte	 000005D7 _DATA	
inserirMsg6  . . . . . . . . . .	Byte	 000005EA _DATA	
inserirMsg7  . . . . . . . . . .	Byte	 000005FD _DATA	
inserirMsg8  . . . . . . . . . .	Byte	 00000623 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
menuMsg1 . . . . . . . . . . . .	Byte	 0000050A _DATA	
menuMsgErro  . . . . . . . . . .	Byte	 0000051D _DATA	
menuOp1  . . . . . . . . . . . .	Byte	 00000422 _DATA	
menuOp2  . . . . . . . . . . . .	Byte	 00000443 _DATA	
menuOp3  . . . . . . . . . . . .	Byte	 00000468 _DATA	
menuOp4  . . . . . . . . . . . .	Byte	 00000493 _DATA	
menuOp5  . . . . . . . . . . . .	Byte	 000004C0 _DATA	
menuOp6  . . . . . . . . . . . .	Byte	 000004DB _DATA	
menuOp7  . . . . . . . . . . . .	Byte	 000004F3 _DATA	
menu . . . . . . . . . . . . . .	Byte	 0000040B _DATA	
recortarMsg1 . . . . . . . . . .	Byte	 0000077F _DATA	
recortarMsg2 . . . . . . . . . .	Byte	 000007AF _DATA	
recortarMsg3 . . . . . . . . . .	Byte	 000007DE _DATA	
recortarMsg4 . . . . . . . . . .	Byte	 0000080C _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
selecionarMsg1 . . . . . . . . .	Byte	 0000083A _DATA	
selecionarMsg2 . . . . . . . . .	Byte	 0000086C _DATA	
selecionarMsg3 . . . . . . . . .	Byte	 0000089D _DATA	
tamTexto . . . . . . . . . . . .	Number	 00000008h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
